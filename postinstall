#!/usr/bin/env bash

source .env

clear
echo -ne "
------------------------------------------------------------------------------------------
                       /$$    /$$         /$$       /$$          
                      | $$   | $$        |__/      | $$          
                      | $$   | $$/$$$$$$  /$$  /$$$$$$$ /$$   /$$                        
                      |  $$ / $$/$$__  $$| $$ /$$__  $$| $$  | $$
                       \  $$ $$/ $$  \ $$| $$| $$  | $$| $$  | $$
                        \  $$$/| $$  | $$| $$| $$  | $$| $$  | $$
                         \  $/ |  $$$$$$/| $$|  $$$$$$$|  $$$$$$$
                          \_/   \______/ |__/ \_______/ \____  $$
                                                        /$$  | $$
                                                       |  $$$$$$/
                                                        \______/
------------------------------------------------------------------------------------------
                               Automated Voidy Installer
------------------------------------------------------------------------------------------

"
echo -ne "
------------------------------------------------------------------------------------------
                                Setup Language And Locale
------------------------------------------------------------------------------------------
"
echo "LANG=en_US.UTF-8" > /etc/locale.conf
sed -i 's/^#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/default/libc-locales
xbps-reconfigure -fv glibc-locales 
ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime
sed -i 's/^#HARDWARECLOCK="UTC"/HARDWARECLOCK=localtime/' /etc/rc.conf
sed -i 's/^#FONT="lat9w-16"/FONT="ter-v32b"/' /etc/rc.conf

echo -ne "
------------------------------------------------------------------------------------------
                                     Adding User
------------------------------------------------------------------------------------------
"
groupadd libvirt
useradd -m -G wheel,audio,video,libvirt -s /bin/bash --badname ${USERNAME}
ENCRYPTED_MASTER_PASSWORD=$(openssl passwd -6 -salt 'salt' ${MASTER_PASSWORD})
ENCRYPTED_PASSWORD=$(openssl passwd -6 -salt 'salt' ${PASSWORD})
usermod --password "${ENCRYPTED_MASTER_PASSWORD}" root
usermod --password "${ENCRYPTED_PASSWORD}" ${USERNAME}
echo "${HOSTNAME}" > /etc/hostname
chsh -s ${SHELL} root

echo -ne "
------------------------------------------------------------------------------------------
                                   Generating fstab
------------------------------------------------------------------------------------------
"
UUIDs=$(blkid | grep -Eo "UUID=\".*\"" | cut -d "\"" -f2)
echo "# <file system> <mount point> <type> <options> <dump> <pass>" > /etc/fstab
for UUID in $UUIDs; do
  TYPE=$(blkid | grep $UUID | sed -n 's/.*TYPE="\([^"]*\)".*/\1/p')
  if [ "${TYPE}" == "vfat" ]; then
    echo "UUID=$UUID /boot/efi vfat defaults 0 2" >> /etc/fstab
  elif [ "${TYPE}" == "ext4" ]; then
    echo "UUID=$UUID / ext4 defaults,discard 0 1" >> /etc/fstab
  fi
done
echo "/swapfile none swap rw,noatime,discard 0 0" >> /etc/fstab
chmod 644 /etc/fstab

echo -ne "
------------------------------------------------------------------------------------------
                                 Creating GRUB Boot Menu
------------------------------------------------------------------------------------------
"
xbps-install -S -y git neovim grub-x86_64-efi void-repo-nonfree
grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=grub
sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT="[^"]*/& rootflags=data=writeback libata.force=1:noncq acpi_osi=!Darwin/' /etc/default/grub
sed -i 's/^GRUB_TIMEOUT=5/GRUB_TIMEOUT=0/' /etc/default/grub
sed -i 's/^#GRUB_DISABLE_SUBMENU=y/GRUB_DISABLE_SUBMENU=y/' /etc/default/grub
grub-mkconfig -o /boot/grub/grub.cfg

echo -ne "
------------------------------------------------------------------------------------------
                                  Installing packages
------------------------------------------------------------------------------------------
"
if [[ ! -f "packages" ]]; then
  echo "Error: packages file not found."
  exit 1
fi
while read line
do
  if [[ $line == "" ]] || [[ $line == \#* ]]; then
    continue
  fi
  xbps-install -S -y "$line"
done < packages

echo -ne "
------------------------------------------------------------------------------------------
                                   Disabling Screen Tear
------------------------------------------------------------------------------------------
"
echo -ne 'Section "Device"
  Identifier "Intel Graphics"
  Driver "intel"
  Option "TearFree" "true"
EndSection
' > /etc/X11/xorg.conf.d/20-intel.conf

echo -ne "
------------------------------------------------------------------------------------------
                               Updating Touchpad Configuration
------------------------------------------------------------------------------------------
"
echo -ne 'Section "InputClass"
    Identifier "libinput touchpad catchall"
    MatchIsTouchpad "on"
    MatchDevicePath "/dev/input/event*"
    Option "Tapping" "True"
    Option "TappingDrag" "True"
    Option "ScrollMethod" "Twofinger"
    Option "NaturalScrolling" "False"
    Option "DisableWhileTyping" "False"
    Driver "libinput"
EndSection
' > /etc/X11/xorg.conf.d/40-libinput.conf

echo -ne "
------------------------------------------------------------------------------------------
                               Re-enabling Essential Services
------------------------------------------------------------------------------------------
"
ln -sf /etc/sv/dhcpcd /etc/runit/runsvdir/default
ln -sf /etc/sv/NetworkManager /etc/runit/runsvdir/default
# slock??

echo -ne "
------------------------------------------------------------------------------------------
                                Add no password sudo rights
------------------------------------------------------------------------------------------
"
sed -ni "/^root/{a\
  ${USERNAME} ALL=(ALL:ALL) NOPASSWD: ALL
p}" /etc/sudoers

echo -ne "
------------------------------------------------------------------------------------------
                                       Finalization
------------------------------------------------------------------------------------------
"
xbps-reconfigure -fa
